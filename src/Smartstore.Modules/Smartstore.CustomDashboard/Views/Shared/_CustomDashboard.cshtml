@model Smartstore.CustomDashboard.Models.PublicInfoModel
@{
    Layout = "_AdminLayout";
}

<style>
        .report-incomplete-orders

    {
        grid-column: 1/11;
    }

    .report-incomplete-orders .incomplete-orders-chart-container {
        height: 300px;
    }

    .news-feed {
        grid-column: 11/13;
        grid-row: 1/6;
    }

    .report-orders {
        grid-column: 1/8;
        grid-row: 2/3;
    }

    .report-bestsellers {
        grid-column: 8/11;
        grid-row: 2/3;
    }

    .report-payments {
        grid-column: 7/11;
        grid-row: 4/5;
    }

    .report-last-contacts {
        grid-column: 1/7;
        grid-row: 5/6;
    }

    .report-top-customers {
        grid-column: 1/4;
    }

    .report-customer-registrations {
        grid-column: 4/11;
        grid-row: 3/4;
    }

    .report-latest-orders {
        grid-column: 1/7;
        grid-row: 4/5;
    }

    .report-store-statistics {
        grid-column: 7/11;
        grid-row: 5/6;
    }

    }

    .table-prevent-overflow tr > th, .table-prevent-overflow tr > td {
        overflow-x: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .news-feed .report-title-row {
        padding: 1.5rem 1rem 0 1rem !important;
    }

    .newsfeed-body {
        padding-top: 1rem;
    }

        .newsfeed-body .admin-config-group > .title {
            padding-left: 1rem;
            padding-right: 1rem;
        }

        .newsfeed-body .admin-config-group:after {
            inset-inline-end: 1rem;
        }

    .newsfeed-item-title {
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

        .newsfeed-item-title > a {
            display: block;
            line-height: 1.3;
        }

    .cnt-newsfeed-item {
        height: 100%;
        display: flex;
        overflow: hidden;
        flex-flow: column;
        border: none;
</style>

<div class="section-header">
    <div class="title">
        <i class="far fa-chart-bar"></i>
        @T("Admin.Dashboard.StoreStatistics")
    </div>
</div>

<div class="dashboard-grid">
    <zone name="admin_dashboard_top"></zone>

    @if (Model?.BreakPoints != null)
    {
        foreach (var bp in Model.BreakPoints)
        {
            foreach (var line in bp.WidgetLines)
            {
                foreach (var widgetItem in line.Widgets.OrderBy(w => w.DisplayOrder))
                {
                    <div class="@widgetItem.Position">
                        @await Component.InvokeAsync(widgetItem.ViewComponentName)
                    </div>
                }
            }
        }
    }

    <zone name="admin_dashboard_bottom"></zone>
</div>
